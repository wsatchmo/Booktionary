{"version":3,"sources":["components/Form/index.js","components/List/index.js","components/Book/index.js","components/Footer/index.js","utils/API.js","pages/Home.js","pages/Saved.js","pages/Repo.js","pages/NoMatch.js","components/Nav/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Form","q","handleInputChange","handleFormSubmit","className","htmlFor","id","type","value","placeholder","name","onChange","required","onClick","List","children","ListItem","Book","title","subtitle","authors","link","description","image","Button","Row","Col","size","target","rel","href","src","alt","Footer","axios","get","params","delete","bookData","post","styles","form","padding","marginBottom","Home","Component","state","books","message","e","this","setState","getBooks","API","then","res","data","catch","preventDefault","handleBookSave","book","find","googleId","volumeInfo","infoLink","imageLinks","thumbnail","render","Container","Jumbotron","Card","style","Body","Text","length","console","log","map","key","join","Saved","getSavedBooks","err","handleBookDelete","componentDidMount","icon","_id","Repo","window","open","location","NoMatch","fluid","Nav","width","innerWidth","updateWidth","newState","toggleNav","addEventListener","componentWillUnmount","removeEventListener","Link","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","pathname","App","Switch","Route","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","document","getElementById","URL","process","origin","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.24f9a5a7.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Form({ q, handleInputChange, handleFormSubmit }) {\n  return (\n    <form>\n      <div className=\"form-group\">\n        <label htmlFor=\"Query\">\n          <strong>Book</strong>\n        </label>\n        <input\n          className=\"form-control\"\n          id=\"Title\"\n          type=\"text\"\n          value={q}\n          placeholder=\"Lord of the Rings\"\n          name=\"q\"\n          onChange={handleInputChange}\n          required\n        />\n      </div>\n      <div className=\"pull-right\">\n        <button\n          onClick={handleFormSubmit}\n          type=\"submit\"\n          className=\"btn btn-lg btn-outline-primary float-right\"\n        >\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\nimport \"./style.css\";\n\n// This component exports both the List and ListItem components\n\nexport const List = ({ children }) => (\n  <ul className=\"list-group\">\n    {children}\n  </ul>\n);\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React from \"react\";\nimport { ListItem } from \"../List\";\nimport { Row, Col } from \"react-bootstrap\";\nimport \"./style.css\";\n\nfunction Book({ title, subtitle, authors, link, description, image, Button }) {\n  return (\n    <ListItem>\n      <Row className=\"flex-wrap\">\n        <Col size=\"md-8\">\n          <h3 className=\"font-italic\">{title}</h3>\n          {subtitle && <h5 className=\"font-italic\">{subtitle}</h5>}\n        </Col>\n        <Col size=\"md-4\">\n          <div className=\"btn-container\">\n            <a className=\"btn btn-light\" target=\"_blank\" rel=\"noopener noreferrer\" href={link}>\n              View\n            </a>\n            <Button />\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col size=\"md-6\">\n          <p className=\"font-italic small\">Author(s): {authors}</p>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <img className=\"book-image\" src={image} alt={title} />\n        </Col>\n        <Col>\n          <p>{description}</p>\n        </Col>\n      </Row>\n    </ListItem>\n  );\n}\n\nexport default Book;","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <footer className=\"bg-primary\">\n      <hr />\n      <p className=\"pull-right text-center text-white\">\n        <i className=\"fa fa-cog fa-spin fa-fw text-white\" /> Built with React.js\n      </p>\n    </footer>\n  );\n}\n\nexport default Footer;","import axios from \"axios\";\n\nexport default {\n  // Gets books from the Google API\n  getBooks: function(q) {\n    return axios.get(\"/api/google\", { params: { q: \"title:\" + q } });\n  },\n  // Gets all saved books\n  getSavedBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  // Deletes the saved book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves an book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};\n","import React, { Component } from \"react\";\nimport {Jumbotron, Col, Row, Container, Card} from \"react-bootstrap\";\nimport Form from \"../components/Form\";\nimport Book from \"../components/Book\";\nimport Footer from \"../components/Footer\";\nimport API from \"../utils/API\";\nimport { List } from \"../components/List\";\n\nconst styles = {\n  form : {\n    padding: 20,\n    marginBottom: 20\n  }\n}\n\nclass Home extends Component {\n  state = {\n    books: [],\n    q: \"\",\n    message: \"Searched books will appear here\"\n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  getBooks = () => {\n    API.getBooks(this.state.q)\n      .then(res =>\n        this.setState({\n          books: res.data\n        })\n      )\n      .catch(() =>\n        this.setState({\n          books: [],\n          message: \"No new books matching. Please search something else\"\n        })\n      );\n  };\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n    this.getBooks();\n  };\n\n  handleBookSave = id => {\n    const book = this.state.books.find(book => book.id === id);\n\n    API.saveBook({\n      googleId: book.id,\n      title: book.volumeInfo.title,\n      subtitle: book.volumeInfo.subtitle,\n      link: book.volumeInfo.infoLink,\n      authors: book.volumeInfo.authors,\n      description: book.volumeInfo.description,\n      image: book.volumeInfo.imageLinks.thumbnail\n    }).then(() => this.getBooks());\n  };\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron className=\"bg-dark text-secondary\">\n              <h1 className=\"text-center\">\n                <i className=\"fa fa-book\"></i>\n                <strong>  Booktionary  </strong>\n                <i className=\"fa fa-book\"></i>\n              </h1>\n              <h2 className=\"text-center\">Search and Save books with the Google API</h2>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-12\">\n            <Card title=\"Book Search\" style={styles.form}>\n              <Form\n                handleInputChange={this.handleInputChange}\n                handleFormSubmit={this.handleFormSubmit}\n                q={this.state.q}\n              />\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-12\">\n            <Card title=\"Results\">\n              <Card.Body>\n              <Card.Text>\n                  {this.state.books.length ? (\n                    <List>\n                      {console.log(\"BOOKS STATE::\" , this.state)}\n                      {this.state.books.map(book => (\n                        <Book\n                          key={book.id}\n                          title={book.volumeInfo.title}\n                          subtitle={book.volumeInfo.subtitle}\n                          link={book.volumeInfo.infoLink}\n                          authors={book.volumeInfo.authors.join(\", \")}\n                          description={book.volumeInfo.description}\n                          image={book.volumeInfo.imageLinks.thumbnail}\n                          Button={() => (\n                            <button\n                              onClick={() => this.handleBookSave(book.id)}\n                              className=\"btn btn-primary ml-2\"\n                            >\n                              Save\n                            </button>\n                          )}\n                        />\n                      ))}\n                    </List>\n                  ) : (\n                    <h2 className=\"text-center\">{this.state.message}</h2>\n                  )}\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <Footer />\n      </Container>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport {Jumbotron, Card, Col, Row, Container} from \"react-bootstrap\";\nimport Book from \"../components/Book\";\nimport Footer from \"../components/Footer\";\nimport API from \"../utils/API\";\nimport { List } from \"../components/List\";\n\nclass Saved extends Component {\n  state = {\n    books: []\n  };\n\n  componentDidMount() {\n    this.getSavedBooks();\n  }\n\n  getSavedBooks = () => {\n    API.getSavedBooks()\n      .then(res =>\n        this.setState({\n          books: res.data\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  handleBookDelete = id => {\n    API.deleteBook(id).then(res => this.getSavedBooks());\n  };\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron  className=\"bg-dark text-secondary\">\n              <h1 className=\"text-center\">\n                <strong>Booktionary</strong>\n              </h1>\n              <h2 className=\"text-center\">Search and Save books from Google</h2>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-12\">\n            <Card title=\"Saved Books\" icon=\"download\">\n              {this.state.books.length ? (\n                <List>\n                  {this.state.books.map(book => (\n                    <Book\n                      key={book._id}\n                      title={book.title}\n                      subtitle={book.subtitle}\n                      link={book.link}\n                      authors={book.authors.join(\", \")}\n                      description={book.description}\n                      image={book.image}\n                      Button={() => (\n                        <button\n                          onClick={() => this.handleBookDelete(book._id)}\n                          className=\"btn btn-danger ml-2\"\n                        >\n                          Delete\n                        </button>\n                      )}\n                    />\n                  ))}\n                </List>\n              ) : (\n                <h2 className=\"text-center\">No Saved Books</h2>\n              )}\n            </Card>\n          </Col>\n        </Row>\n        <Footer />\n      </Container>\n    );\n  }\n}\n\nexport default Saved;\n","function Repo(){\n    window.open(\"https://github.com/wsatchmo/Booktionary\"); \n    window.location.href = \"/\";\n}\n\nexport default Repo;","import React from \"react\";\nimport {Jumbotron, Col, Row, Container } from \"react-bootstrap\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron className=\"bg-dark text-secondary\">\n            <h1 className=\"text-center\">404 Page Not Found</h1>\n            <h1 className=\"text-center\">\n              We're sorry, there doesn't seem to be anything here...\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\nclass Nav extends Component {\n  state = {\n    open: false,\n    width: window.innerWidth\n  };\n\n  updateWidth = () => {\n    const newState = { width: window.innerWidth };\n\n    if (this.state.open && newState.width > 991) {\n      newState.open = false;\n    }\n\n    this.setState(newState);\n  };\n\n  toggleNav = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateWidth);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWidth);\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark danger mb-2\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          Booktionary\n        </Link>\n        <button\n          onClick={this.toggleNav}\n          className=\"navbar-toggler\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className={`${this.state.open ? \"\" : \"collapse \"}navbar-collapse`} id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <Link\n                onClick={this.toggleNav}\n                className={window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}\n                to=\"/\"\n              >\n                Search\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                onClick={this.toggleNav}\n                className={window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"}\n                to=\"/saved\"\n              >\n                Saved\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                onClick={this.toggleNav}\n                className={window.location.pathname === \"/repo\" ? \"nav-link active\" : \"nav-link\"}\n                to=\"/repo\"\n              >\n                Github Repo\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Nav;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Saved from \"./pages/Saved\";\nimport Repo from \"./pages/Repo\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"bg-primary\">\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/saved\" component={Saved} />\n          <Route exact path=\"/repo\" component={Repo} />\n          <Route component={NoMatch} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}